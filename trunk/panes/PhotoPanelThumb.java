/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PhotoPanel.java
 *
 * Created on 5 Σεπ 2010, 10:44:29 μμ
 */
package jphotos.panes;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.util.HashMap;
import java.util.logging.Level;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import jphotos.Photos;
import jphotos.database.FileRecord;
import jphotos.database.Print;
import jphotos.tools.Tools;
import org.apache.sanselan.common.byteSources.ByteSourceFile;
import org.apache.sanselan.formats.jpeg.JpegImageParser;
import org.apache.sanselan.formats.tiff.JpegImageData;
import org.apache.sanselan.formats.tiff.TiffDirectory;
import org.apache.sanselan.formats.tiff.TiffImageMetadata;

/**
 *
 * @author lordovol
 */
public class PhotoPanelThumb extends javax.swing.JPanel {

  public static final int gridSize = 60;
  public static final long serialVersionUID = 235346345645L;
  public static final Color BORDER_HIGHLIGHT_COLOR = Color.BLACK;
  public static final int BORDER_WIDTH = 0;
  public static final int ICON_WIDTH = 60;
  private FileRecord fileRecord;
  private Print print;
  private Image image;
  private ScrollableFlowPanel photoPanel;

  @Override
  protected void paintComponent(Graphics g) {
    super.paintComponent(g);
    int w = 10000, h = 10000;
    int i = 0;
    g.drawImage(image, 0, 0, this);
  }

  /** Creates new form PhotoPanel */
  public PhotoPanelThumb() {
    initComponents();
  }

  PhotoPanelThumb(ScrollableFlowPanel photoPanel, FileRecord fileRecord, Print print) {
    try {
      this.fileRecord = fileRecord;
      this.print = print;
      this.photoPanel = photoPanel;
      initComponents();
      long i = System.currentTimeMillis();
      JpegImageParser parser = new JpegImageParser();
      ByteSourceFile bytesource = new ByteSourceFile(new File(fileRecord.path));
      HashMap params = new HashMap();
      TiffImageMetadata d = parser.getExifMetadata(bytesource, params);
      TiffDirectory dir = d.findDirectory(TiffImageMetadata.DIRECTORY_TYPE_SUB);
      JpegImageData im = dir.getJpegImageData();
      byte[] data = im.data;
      ImageIcon bigIcon = new ImageIcon(data);
      Image bigImage = bigIcon.getImage();
      image = bigImage.getScaledInstance(ICON_WIDTH, bigImage.getHeight(this) * ICON_WIDTH / bigImage.getWidth(this), Image.SCALE_FAST);
      //label_photo.setIcon(new ImageIcon(ic));
    } catch (Exception ex) {
      long i = System.currentTimeMillis();
      ImageIcon im = Tools.getImage(fileRecord, ICON_WIDTH);
      image = im.getImage();
      //label_photo.setIcon(im);
      Photos.logger.log(Level.WARNING, "Could not read exif thumbnail from {0}", fileRecord.path);

    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    label_photo = new javax.swing.JLabel();
    bt_delete = new javax.swing.JButton();

    setBackground(new java.awt.Color(255, 255, 255));
    setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    setPreferredSize(new java.awt.Dimension(60, 51));

    label_photo.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
    label_photo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    label_photo.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(java.awt.event.MouseEvent evt) {
        label_photoMouseEntered(evt);
      }
      public void mouseExited(java.awt.event.MouseEvent evt) {
        label_photoMouseExited(evt);
      }
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        label_photoMouseReleased(evt);
      }
    });

    bt_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jphotos/images/remove.png"))); // NOI18N
    bt_delete.setToolTipText("Αφαίρεση φωτογραφίας από λίστα");
    bt_delete.setBorder(null);
    bt_delete.setBorderPainted(false);
    bt_delete.setContentAreaFilled(false);
    bt_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bt_delete.setFocusPainted(false);
    bt_delete.setFocusable(false);
    bt_delete.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    bt_delete.setMargin(new java.awt.Insets(2, 2, 2, 2));
    bt_delete.setMaximumSize(new java.awt.Dimension(20, 20));
    bt_delete.setMinimumSize(new java.awt.Dimension(20, 20));
    bt_delete.setOpaque(false);
    bt_delete.setPreferredSize(new java.awt.Dimension(20, 20));
    bt_delete.setRolloverEnabled(false);
    bt_delete.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bt_deleteActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(label_photo, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap(63, Short.MAX_VALUE)
        .addComponent(bt_delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addComponent(label_photo, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(bt_delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void label_photoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_photoMouseEntered
    //label_photo.setBorder(BorderFactory.createLineBorder(BORDER_HIGHLIGHT_COLOR, BORDER_WIDTH));
  }//GEN-LAST:event_label_photoMouseEntered

  private void label_photoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_photoMouseExited
    // label_photo.setBorder(BorderFactory.createEmptyBorder(BORDER_WIDTH, BORDER_WIDTH, BORDER_WIDTH, BORDER_WIDTH));
  }//GEN-LAST:event_label_photoMouseExited

  private void label_photoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_photoMouseReleased
    Photos p = (Photos) getTopLevelAncestor();
    p.previewPanel.setImage(fileRecord);
  }//GEN-LAST:event_label_photoMouseReleased

  private void bt_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_deleteActionPerformed
    if (Tools.ask("Αφαίρεση φωτογραφίας", "Θέλετε να αφαιρέσετε τη φωτογραφία από τη λίστα;") == JOptionPane.YES_OPTION) {
      Photos.curList.remove(print);
      photoPanel.remove(this);
      photoPanel.revalidate();
      photoPanel.repaint();
      Photos.isCurListSaved = false;
    }

  }//GEN-LAST:event_bt_deleteActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton bt_delete;
  private javax.swing.JLabel label_photo;
  // End of variables declaration//GEN-END:variables
}
