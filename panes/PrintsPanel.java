/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InfoPanel.java
 *
 * Created on 2 Σεπ 2010, 6:12:03 μμ
 */
package jphotos.panes;

import java.awt.FlowLayout;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.ScrollPaneConstants;
import jphotos.Photos;
import jphotos.database.FileRecord;
import jphotos.database.Print;
import jphotos.tools.Tools;

/**
 *
 * @author lordovol
 */
public class PrintsPanel extends javax.swing.JPanel {
  private final ScrollableFlowPanel photoPanel;
  private final JScrollPane panel;
  private FileRecord fileRecord;
  private Print print;

  /** Creates new form InfoPanel */
  public PrintsPanel() {
    initComponents();
    photoPanel = new ScrollableFlowPanel();
    photoPanel.setLayout(new FlowLayout(FlowLayout.LEFT));
    panel = new JScrollPane(photoPanel);
    panel.setBorder(null);
    panel.getViewport().setOpaque(false);
    panel.setOpaque(false);
    photoPanel.setOpaque(false);
    panel.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
    add(panel);
    //photoPanel.setLayout(new GridLayout((datePhotos.size()/4) + 1,4));
    
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 470, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 228, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  public void addPhoto(FileRecord fileRecord) {
    this.fileRecord = fileRecord;
    int id = fileRecord.id;
    String now = Tools.getNow();
    Print print = new Print();
    print.file_id = id;
    Photos.curList.add(print);
    Photos.logger.log(Level.INFO, "Photo {0} added to prints", fileRecord.path);
    Photos.isCurListSaved = false;
    this.print = print;
    PhotoPanelThumb p = new PhotoPanelThumb(photoPanel, fileRecord, print);
    photoPanel.add(p);
    p.addPropertyChangeListener(new PropertyChangeListener() {

      public void propertyChange(PropertyChangeEvent evt) {
        if(evt.getPropertyName().equals(PhotoPanelThumb.THUMB_REMOVED)){
          Photos photos = (Photos) getTopLevelAncestor();
          photos.tree.populate(0);
        }
      }
    });
    revalidate();
    repaint();
  }

  public void addPhotos(ArrayList<FileRecord> photos){
    for (Iterator<FileRecord> it = photos.iterator(); it.hasNext();) {
      FileRecord f = it.next();
      addPhoto(f);
    }
  }

  public void clearPrints() {
    photoPanel.removeAll();
    revalidate();
    repaint();
  }


  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
}
